#######################

    type hooks !!!!

#######################

remember:
    1. all events implicitly include the entity as 'self' and the type object as 'this'
    2. armors and health can be on non-players, avoid using player-specific functions
    3. look at the util functions in mc_framework, they might be useful
    4. effects always include the effect count first as an argument

#######################

    SERVER - runs on the server
    CLIENT - runs on the client
    SHARED - runs on both server and client
    LOCALIZED - runs on a specific type instance instead of the entity's entire set of types
    PREDICTED - https://wiki.facepunch.com/gmod/prediction

#######################

OnTakeDamage(dmg) SERVER
    description:
        called when the entity takes damage
    arguments:
        dmg - the CTakeDamageInfo object for the damage (objects pass by reference)
    return:
        true to cancel the damage event

OnDealDamage(dmg) SERVER
    description:
        called when the entity deals damage
    arguments:
        dmg - the CTakeDamageInfo object for the damage (objects pass by reference)
    return:
        true to cancel the damage event

HandleArmorReduction(dmg) SERVER
    description:
        called before the entity's armor is going to be calculated
    arguments:
        dmg - the CTakeDamageInfo object for the damage (objects pass by reference)
    return:
        true to cancel any armor reduction

PostTakeDamage(dmg, wasDamageTaken) SERVER
    description:
        called *after* the entity takes damage
    arguments:
        dmg - the CTakeDamageInfo object for the damage (objects pass by reference)
        wasDamageTaken - Whether damage was actually taken

OnPlayerSpawn(transition) SERVER
    description:
        called when a player spawns
    arguments:
        transition - true when they are spawning from a map transition

OnEnabled() SERVER
    description:
        called when the entity gets MCS enabled

OnDisabled() SERVER
    description:
        called when the entity gets MCS disabled

OnEffectProc() SERVER
    description:
        called when effects are procced (every 0.5 seconds), intended to be used in effect types

OnApplyEffect(effectType, amount) SERVER
    description:
        called when an effect is applied to an entity
    arguments:
        effectType - the effect type object of the effect to be applied
        amount - how many stacks are being applied at once
    return:
        any value to cancel the application
    usage:
        not for effect code; use this for when health/armor does something with effects

EffectApplied(amount) SERVER LOCALIZED
    description:
        called on an effect when it's applied (including when it gets stacked onto itself)
    arguments:
        amount - the amount of stacks applied at once

EffectFirstApplied() SERVER LOCALIZED
    description:
        called on an effect when it's first applied (and not when it gets stacked onto itself)

EffectExpired() SERVER LOCALIZED
    description:
        called on an effect when it runs out of stacks and expires

OnDeath(inflictor, attacker, damageBits) SERVER
    description:
        called when an entity is killed
    arguments:
        inflictor - the item used to kill the entity
        attacker - the entity that killed the entity
        damageBits - the game damagetypes of the killing blow

OnKill(inflictor, victim, damageBits) SERVER
    description:
        called when an entity kills another entity
    arguments:
        inflictor - the item used to kill the player
        victim - the entity that was killed
        damageBits - the game damagetypes of the killing blow

OnSwitchFrom() SERVER LOCALIZED
    description:
        called on a health type or armor type when it is switched from

OnSwitchTo() SERVER LOCALIZED
    description:
        called on a health type or armor type when it is switched to

EffectInstantDamage(dmg) SERVER LOCALIZED
    description:
        called on an effect the moment it gets applied in a damage event
    arguments:
        dmg - the CTakeDamageInfo of the damage instance
    usage:
        any effect that is intended to deal instant damage on apply

EffectStackReduced(reduce) SERVER LOCALIZED
    description:
        called on an effect when its stack gets reduced
    arguments:
        reduce - how many stacks expired this tick

PlayerSetupMove(mv, cmd) SHARED PREDICTED
    description:
        called before the engine processes movements on a player (https://wiki.facepunch.com/gmod/GM:SetupMove)
    arguments:
        mv - the CMoveData of the movement
        cmd - the CUserCmd of the movement

PlayerStartCommand(cmd) SHARED PREDICTED
    description:
        called to be able to modify player input (https://wiki.facepunch.com/gmod/GM:StartCommand)
    arguments:
        cmd - the CUserCmd of the incoming movement

DrawOverlay() CLIENT
    description:
        2d draw hook that renders after literally everything else in the game

PostDrawOpaqueRenderables(drawingDepth, drawingSkybox, isDraw3dSkybox) CLIENT
    description:
        3d draw hook that renders after drawing all opaque entities
    arguments:
        drawingDepth - whether the current draw is writing depth
        drawingSkybox - whether the current draw is drawing the skybox (3d or 2d), for 2d skyboxes this might always be true
        isDraw3dSkybox - whether the current draw is drawing the 3d skybox

PostDrawTranslucentRenderables(drawingDepth, drawingSkybox, isDraw3dSkybox) CLIENT
    description:
        3d draw hook that renders after drawing all translucent entities
    arguments:
        drawingDepth - whether the current draw is writing depth
        drawingSkybox - whether the current draw is drawing the skybox (3d or 2d), for 2d skyboxes this might always be true
        isDraw3dSkybox - whether the current draw is drawing the 3d skybox

RenderScreenspaceEffects() CLIENT
    description:
        2d draw hook intended for drawing post processing effects (https://wiki.facepunch.com/gmod/GM:RenderScreenspaceEffects)

SetupFog() CLIENT
    description:
        Allows usage of render.Fog* functions to mess with fog, applies to both skybox and world

EntityGetArmor() SHARED
    description:
        Called when a non-player gets their armor checked
    return:
        any number value the armor should be

EntityGetMaxArmor() SHARED
    description:
        Called when a non-player gets their max armor checked
    return:
        any number value the max armor should be

EffectCanApply(amount) SERVER LOCALIZED
    description:
        Called on an effect to determine if an incoming application is allowed
    arguments:
        amount - the amount of stacks to be applied
    return:
        false to prevent applying

OnArmorChanged(prevArmor, armor) SERVER
    description:
        Called when a player's armor value is changed from the previous tick
    arguments:
        prevArmor - the armor last tick
        armor - the armor this tick

OnHealthChanged(prevHealth, health) SERVER
    description:
        Called when a player's health value is changed from the previous tick
    arguments:
        prevHealth - the health last tick
        health - the health this tick

CanBeSeenBy(ply) CLIENT
    description:
        Called to determine if the ply looking at this entity can see their target id
    arguments:
        ply - the player looking at the entity
    return:
        true to force-allow, false to force-reject

CanSee(ent) CLIENT
    description:
        Called to determine if the entity a player is looking at can see that entity's target id
    arguments:
        ent - the entity the player is looking at
    return:
        true to force-allow, false to force-reject