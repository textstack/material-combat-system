#######################

    type hooks !!!!

#######################

remember:
    1. all events implicitly include the entity as 'self'
    2. armors and health can be on non-players, avoid using player-specific functions
    3. look at the util functions in mc_framework, they might be useful
    4. effects always include the effect count first as an argument

#######################

OnTakeDamage(dmg) SERVER
    description:
        called when the entity takes damage
    arguments:
        dmg - the CTakeDamageInfo object for the damage (objects pass by reference)
    return:
        true to cancel the damage event

OnDealDamage(dmg) SERVER
    description:
        called when the entity deals damage
    arguments:
        dmg - the CTakeDamageInfo object for the damage (objects pass by reference)
    return:
        true to cancel the damage event

HandleArmorReduction(dmg) SERVER
    description:
        called before the entity's armor is going to be calculated
    arguments:
        dmg - the CTakeDamageInfo object for the damage (objects pass by reference)
    return:
        true to cancel any armor reduction

PostTakeDamage(dmg, wasDamageTaken) SERVER
    description:
        called *after* the entity takes damage
    arguments:
        dmg - the CTakeDamageInfo object for the damage (objects pass by reference)
        wasDamageTaken - Whether damage was actually taken

OnPlayerSpawn(transition) SERVER
    description:
        called when a player spawns
    arguments:
        transition - true when they are spawning from a map transition

OnEnabled() SERVER
    description:
        called when the entity gets MCS enabled

OnDisabled() SERVER
    description:
        called when the entity gets MCS disabled

OnEffectProc() SERVER
    description:
        called when effects are procced (every 0.5 seconds), intended to be used in effect types

OnApplyEffect(id, amount) SERVER
    description:
        called when an effect is applied to an entity
    arguments:
        id - id of the effect
        amount - how many stacks are being applied at once
    return:
        any value to cancel the application
    usage:
        not for effect code; use this for when health/armor does something with effects

EffectApplied(amount) SERVER LOCALIZED
    description:
        called on an effect when it's applied (including when it gets stacked onto itself)
    arguments:
        amount - the amount of stacks applied at once

EffectFirstApplied() SERVER LOCALIZED
    description:
        called on an effect when it's first applied (and not when it gets stacked onto itself)

EffectExpired() SERVER LOCALIZED
    description:
        called on an effect when it runs out of stacks and expires

OnDeath(inflictor, attacker, damageBits) SERVER
    description:
        called when an entity is killed
    arguments:
        inflictor - the item used to kill the entity
        attacker - the entity that killed the entity
        damageBits - the game damagetypes of the killing blow

OnKill(inflictor, victim, damageBits) SERVER
    description:
        called when an entity kills another entity
    arguments:
        inflictor - the item used to kill the player
        victim - the entity that was killed
        damageBits - the game damagetypes of the killing blow

OnSwitchFrom() SERVER LOCALIZED
    description:
        called on a health type or armor type when it is switched from

OnSwitchTo() SERVER LOCALIZED
    description:
        called on a health type or armor type when it is switched to
